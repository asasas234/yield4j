package org.yield4j.real;
import static org.yield4j.YieldSupport.*;

//>> [3141,5926,5358,9793,2384,6264,3383,2795,0288,4197,1693,9937,5105,8209,7494,4592,3078,1640,6286,2089,9862,8034,8253,4211,7067,9821,4808,6513,2823,0664,7093,8446,0955,0582,2317,2535,9408,1284,8111,7450,2841,0270,1938,5211,0555,9644,6229,4895,4930,3819,6442,8810,9756,6593,3446,1284,7564,8233,7867,8316,5271,2019,0914,5648,5669,2346,0348,6104,5432,6648,2133,9360,7260,2491,4127,3724,5870,0660,6315,5881,7488,1520,9209,6282,9254,0917,1536,4367,8925,9036,0011,3305,3054,8820,4665,2138,4146,9519,4151,1609,4330,5727,0365,7595,9195,3092,1861,1738,1932,6117,9310,5118,5480,7446,2379,9627,4956,7351,8857,5272,4891,2279,3818,3011,9491,2983,3673,3624,4065,6643,0860,2139,4946,3952,2473,7190,7021,7986,0943,7027,7053,9217,1762,9317,6752,3846,7481,8467,6694,0513,2000,5681,2714,5263,5608,2778,5771,3427,5778,9609,1736,3717,8721,4684,4090,1224,9534,3014,6549,5853,7105,0792,2796,8925,8923,5420,1995,6112,1290,2196,0864,0344,1815,9813,6297,7477,1309,9605,1870,7211,3499,9999,8372,9780,4995,1059,7317,3281,6096,3185]
public class Pi {
    @org.yield4j.Generator public Iterable<String> pi() {
        int a = 10000, b = 0, c = 2800, d = 0, e = 0, f[] = new int[2801], g = 0;

        for (; b - c != 0;) {
            f[b++] = a / 5;
        }
        for (; (g = c * 2) != 0; c -= 14, e = d % a) {
            d = 0;
            for (b = c; true; d *= b) {
                d += f[b] * a;
                f[b] = d % --g;
                d /= g--;
                if (--b == 0)
                    break;
            }
            yield_return(String.format("%04d", e + d / a));
        }
    }
}
